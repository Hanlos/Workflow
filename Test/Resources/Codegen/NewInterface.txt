module test;
using system::*;

func Show1(xs : int{}) : string
{
	var s = "";
	for(x in xs)
	{
		if(s == "")
		{
			s = s & x;
		}
		else
		{
			s = s & ", " & x;
		}
	}
	return s;
}

func Show2(xs : int{}) : string
{
	var s = "";
	for(x in reversed xs)
	{
		if(s == "")
		{
			s = s & x;
		}
		else
		{
			s = s & ", " & x;
		}
	}
	return s;
}

func main():string
{
	var begin = 1;
	var end = 5;
	var xs = cast int{} new Enumerable^
	{
		func CreateEnumerator() : Enumerator^
		{
			return new Enumerator^
			{
				var index = -1;

				func GetCurrent() : object
				{
					return begin + index;
				}

				func GetIndex() : int
				{
					return index;
				}

				func Next() : bool
				{
					if(index == end - begin)
					{
						return false;
					}
					else
					{
						index = index + 1;
						return true;
					}
				}
			};
		}
	};
	return "[" & Show1(xs) & "][" & Show2(xs) & "]";
}